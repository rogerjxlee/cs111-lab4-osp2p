# Fill in your name, student ID, and email address in this file.
# If you are working in a team, fill out the information for both team 
# members.

# SUBMIT THE LAB ONLY ONCE (from only one partner). This file will be
# automatically parsed in order to give both team members credit for the
# lab.

# You need to fill in the EXERCISE sections describing your solutions
# for Tasks 1, 2, and 3, as well as write the corresponding code.
# If you did one or more extra credit problems, indicate which one in the
# appropriate section below (remove the # sign first). If you have any other
# information you'd like us to know, please add it at the end of the file.

# Partner 1
Name: Roger Lee
Student ID: 704018489
Email: rogerl1993@gmail.com 

# Partner 2 (if you're working in a team)
Name: Andrew Shih
Student ID: 704032348
Email: ashihe828@gmail.com

# EXERCISE 1: What method you used to make your peer download and upload
#    files in parallel?  (~1-3 sentences)

We achieved parallelization by forking before each peer download and upload.
The child processes executed their specififed download/upload task and then
exited. The parent process continues forking for each download/upload task
that it encounters. 

# EXERCISE 2A: What conditions did you find and fix that would have
#    triggered a buffer overrun bug?  (~1-3 sentences each)

Filenames longer than FILENAMESIZ-1 overrun the filename buffer. Fixed by
checking the

# EXERCISE 2B: What other robustness problems did you fix?  (~1-3 sentences
#    each)

# EXERCISE 3: Describe the attacks you implemented for "evil mode".  Why
#    are they attacks?  (~3-10 sentences each)

# Extra credit problems
#Extra credit problem: none

# Add any other information you'd like us to know below this line.
